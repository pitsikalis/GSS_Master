// ===========================================================================================================================================================================
/*
 * Copyright (c) 2014 LowLevelTech
 * Alex Dunn
 * llt@dunnalex.com
*/
// ===========================================================================================================================================================================
Shader "Hidden/PyroTechnix/Shockwave" 
{
	SubShader 
	{
		// ===========================================================================================================================================================================
		Tags { "RenderType"="Transparent" "RenderQueue"="Transparent" }
		LOD 200
		// ===========================================================================================================================================================================
		GrabPass { "_BackBuffer" }
		// ===========================================================================================================================================================================
		Pass
		{
			// ===========================================================================================================================================================================
			Blend SrcAlpha OneMinusSrcAlpha
			ZTest Off
			ZWrite Off
			Cull back
			// ===========================================================================================================================================================================
			CGPROGRAM
			#pragma vertex RenderVS
			#pragma fragment RenderPS
			#pragma target 3.0
			#pragma glsl
			#include "UnityCG.cginc"
			// ===========================================================================================================================================================================
			float4x4 _Camera2World;
			float4 _Position_Radius;
			float _Strength;
			sampler2D _BackBuffer;
			// ===========================================================================================================================================================================
			struct PS_INPUT
			{
				float4 posPS		: SV_POSITION;
				float4 screenPos	: TEXCOORD0;
				float4 uv_dir			: TEXCOORD1;
			};
			// ===========================================================================================================================================================================
			PS_INPUT RenderVS( appdata_base i )
			{
				const float3 posWS = mul( _Camera2World, float4(i.vertex.xyz, 0) ).xyz * _Position_Radius.w + _Position_Radius.xyz;

				PS_INPUT o;
				{
					o.posPS = mul( UNITY_MATRIX_VP, float4(posWS, 1) );
					o.screenPos = ComputeGrabScreenPos( o.posPS );
					o.uv_dir = float4( i.texcoord.xy, normalize(i.vertex.xy) );
				}
				return o;
			}
			// ===========================================================================================================================================================================
			float4 RenderPS( const PS_INPUT i ) : COLOR
			{
				float distortion = saturate(pow(1 - abs(i.uv_dir.y * 2 - 1), 3) )  * _Strength;

				const float4 backBuffer = tex2Dproj( _BackBuffer, UNITY_PROJ_COORD( i.screenPos + float4(i.uv_dir.zw * distortion, 0, 0 ) ) );
				return float4( backBuffer.xyz, distortion);//backBuffer.a);
			}
			ENDCG
			// ===========================================================================================================================================================================
		}
	} 
}
// ===========================================================================================================================================================================